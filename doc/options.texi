 @option{haltdumpcpu} (type: Boolean)

     Controls whether the CPU registers will be dumped on halt. The
     default value is FALSE.

 @option{haltdumpcp0} (type: Boolean)

     Controls whether the system control coprocessor (CP0) registers
     will be dumped on halt. The default value is FALSE.

 @option{excpriomsg} (type: Boolean)

     Controls whether exception prioritizing messages will be printed.
     These messages attempt to explain which of a number of exceptions
     caused by the same instruction will be reported. The default value
     is FALSE.

 @option{excmsg} (type: Boolean)

     Controls whether every exception will cause a message to be
     printed. The message gives the exception code, a short explanation
     of the exception code, its priority, the delay slot state of the
     virtual CPU, and states what type of memory access the exception
     was caused by, if applicable. The default value is FALSE.

 @option{bootmsg} (type: Boolean)

     Controls whether boot-time and halt-time messages will be printed.
     These include ROM image size, self test messages, reset and halt
     announcements, and possibly other messages. The default value is
     TRUE.

 @option{instdump} (type: Boolean)

     Controls whether every instruction executed will be disassembled
     and printed. The default value is TRUE.

 @option{dumpcpu} (type: Boolean)

     Controls whether the CPU registers will be dumped after every
     instruction. The default value is FALSE.

 @option{dumpcp0} (type: Boolean)

     Controls whether the system control coprocessor (CP0) registers
     will be dumped after every instruction. The default value is FALSE.

 @option{haltibe} (type: Boolean)

     If haltibe is set to TRUE, the virtual machine will halt when an
     instruction fetch causes a bus error (exception code 6, Instruction
     bus error). This is useful if you are expecting execution to jump
     into unmapped areas of memory, and you want it to stop instead of
     calling the exception handler. The default value is TRUE.

 @option{haltjrra} (type: Boolean)

     If haltjrra is set to TRUE, the virtual machine will halt when the
     instruction "jr $31" (also written "jr $ra") is encountered. Since
     this is the instruction for a procedure call to return, this is
     useful if you have a simple procedure to run and you want execution
     to terminate when it finishes. The default value is FALSE.

 @option{haltbreak} (type: Boolean)

     If haltbreak is set to TRUE, the virtual machine will halt when a
     breakpoint exception is encountered (exception code 9). This is
     equivalent to halting when a "break" instruction is encountered.
     The default value is TRUE.

 @option{instcounts} (type: Boolean)

     Set instcounts to TRUE if you want to see instruction counts, a
     rough estimate of total runtime, and execution speed in
     instructions per second when the virtual machine halts. The default
     value is FALSE.

 @option{romfile} (type: string)

     This is the name of the file which will be initially loaded into
     memory (at the address given in "loadaddr", typically 0xbfc00000)
     and executed when the virtual machine is reset. The default value
     is "romfile.rom".

 @option{configfile} (type: string)

     This is the name of the user configuration file. It will be
     ~username-expanded and checked for configuration options before the
     virtual machine boots. The default value is "~/.vmipsrc".

 @option{loadaddr} (type: number)

     This is the virtual address where the ROM will be loaded. Note that
     the MIPS reset exception vector is always 0xbfc00000 so unless
     you're doing something incredibly clever you should plan to have
     some executable code at that address. Since the caches and TLB are
     in an indeterminate state at the time of reset, the load address
     must be in uncacheable memory which is not mapped through the TLB
     (kernel segment "kseg1"). This effectively constrains the valid
     range of load addresses to between 0xa0000000 and 0xc0000000. The
     default value is 0xbfc00000.

 @option{memsize} (type: number)

     This variable controls the size of the virtual CPU's "physical"
     memory in bytes. You might want to round this off to the nearest
     page; you can determine the pagesize using utils/getpagesize.cc.
     The default value is 0x100000.

 @option{memdump} (type: Boolean)

     If memdump is set, then the virtual machine will dump its RAM into
     a file named "memdump.bin" at the end of processing. The default
     value is FALSE.

 @option{reportirq} (type: Boolean)

     If reportirq is set, then any change in the interrupt inputs from a
     device will be reported on stderr. The default value is FALSE.

 @option{usetty} (type: Boolean)

     If usetty is set, then the SPIM-compatible console device will be
     configured. If it is not set, then no console device will be
     available to the virtual machine. The default value is TRUE.

 @option{ttydev} (type: string)

     This pathname will be used as the device from which reads from the
     console device will take their data, and to which writes to the
     console device will send their data. The default value is
     "/dev/tty".

 @option{debug} (type: Boolean)

     If debug is set, then the gdb remote serial protocol backend will
     be enabled in the virtual machine. This will cause the machine to
     wait for gdb to attach and "continue" before booting the ROM file.
     If debug is not set, then the machine will boot the ROM file
     without pausing. The default value is FALSE.

