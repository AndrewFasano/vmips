SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs

VMIPSTOOL=../vmipstool
MGCC=$(VMIPSTOOL) --compile
MGCC_FLAGS=-g -I@top_srcdir@
MAS=$(VMIPSTOOL) --assemble
MLD=$(VMIPSTOOL) --link
CPP=$(VMIPSTOOL) --preprocess -I@top_srcdir@ -I@top_srcdir@/sample_code
MOBJDUMP=@mipstoolprefix@objdump
MOBJCOPY=@mipstoolprefix@objcopy
DISASSEMBLE=$(MOBJDUMP) --disassemble-all --all-headers
ROMS= addi.rom bgezal.rom bltzal.rom bc0.rom bdexcp.rom clocker.rom echo.rom \
 emptymain.rom exception.rom hello.rom load.rom loser.rom mthi_lo.rom \
 mumble.rom shift.rom sort.rom syscall.rom testdev.rom tester.rom xor.rom \
 coproc.rom bltz.rom multu.rom ulw.rom tlbwr.rom sub.rom usw.rom
RAWTEXTS=$(ROMS:.rom=.raw)
RELOCS=$(ROMS:.rom=.exe)
SETUP=../sample_code/setup.o
OBJS=$(COBJS) $(AOBJS)
#------
CSRCS=tester.c sort.c random.c emptymain.c hello.c echo.c
ASRCS= addi.S bc0.S bdexcp.S bgezal.S bltzal.S clocker.S exception.S load.S \
 loser.S mthi_lo.S mumble.S shift.S syscall.S testdev.S xor.S coproc.S bltz.S \
 multu.S ulw.S tlbwr.S sub.S usw.S
CPREP=$(CSRCS:.c=.i)
CASM=$(CSRCS:.c=.s)
COBJS=$(CSRCS:.c=.o)
AOBJS=$(ASRCS:.S=.o)
ODUMP=$(COBJS:.o=.dump) $(AOBJS:.o=.dump)
CLEANFILES=$(CPREP) $(COBJS) $(AOBJS) $(ODUMP) $(CASM) $(RAWTEXTS) $(RELOCS)
CLOBBERFILES=$(ROMS)
DISTFILES=Makefile.in $(ASRCS) $(CSRCS) README
#------

all: $(ROMS)

dump: $(ODUMP)

# Nothing to do here:
dvi check installcheck install:

clean:
	-rm -f $(CLEANFILES)

distclean: clean
	-rm -f $(CLOBBERFILES)

maintainer-clean: distclean

loser.rom: loser.raw
    dd if=$*.raw of=$@ bs=4c count=1

%.rom: %.exe
	$(VMIPSTOOL) --make-rom $*.exe $*.rom

%.raw: %.exe
	$(MOBJCOPY) -O binary $< $@

hello.exe: $(SETUP) hello.o
	$(MLD) -o $@ $+

echo.exe: $(SETUP) echo.o
	$(MLD) -o $@ $+

sort.exe: $(SETUP) sort.o random.o
	$(MLD) -o $@ $+

tlbwr.exe: $(SETUP) tlbwr.o
	$(MLD) -o $@ $+

usw.exe: $(SETUP) usw.o
	$(MLD) -o $@ $+

emptymain.exe: $(SETUP) emptymain.o
	$(MLD) -o $@ $+

tester.exe: $(SETUP) tester.o
	$(MLD) -o $@ $+

%.exe: %.o
	$(MLD) -o $@ $+

%.s: %.c
	$(MGCC) $(MGCC_FLAGS) -S -c -o $@ $<

%.o: %.c
	$(MGCC) $(MGCC_FLAGS) -c -o $@ $<

%.o: %.s
	$(MAS) -o $@ $<

%.o: %.S
	$(VMIPSTOOL) --assemble -I@top_srcdir@ -I@top_srcdir@/sample_code -o $@ $<

%.i: %.c
	$(CPP) $< > $@

%.dump: %.o
	$(DISASSEMBLE) $< > $@

# Snarfed from automake and modified.
distdir: $(DISTFILES)
	-rm -rf $(distdir)
	mkdir $(distdir)
	-chmod 777 $(distdir)
	here=`cd $(top_builddir) && pwd`; \
	top_distdir=`cd $(distdir) && pwd`; \
	distdir=`cd $(distdir) && pwd`; \
	for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done

